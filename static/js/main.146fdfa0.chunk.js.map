{"version":3,"sources":["ui/Tabs/index.tsx","ui/UserReaction/index.tsx","utils.ts","ui/Summary/index.tsx","ui/icons/SmilePlus/assets/smile.svg","ui/icons/SmilePlus/assets/plus.svg","ui/icons/SmilePlus/index.tsx","ui/Tooltip/index.tsx","ui/buttons/Emoji/index.tsx","ui/buttons/Trigger/index.tsx","ui/buttons/EmojiCount/index.tsx","hooks/useReaction.tsx","api.ts","components/App/index.tsx","reportWebVitals.ts","index.tsx"],"names":["TabPane","children","Container","styled","div","TabNamesList","ul","TabNamesListItem","li","props","active","TabContent","Tabs","activeKey","onChange","handleOnTabClick","tabKey","activeTab","find","item","index","map","onClick","bind","tab","ImageContainer","UserReaction","user","reaction","src","avatar","alt","emoji","first_name","last_name","groupBy","list","getKey","reduce","previous","currentItem","group","push","Title","Summary","title","userReactions","useState","setActiveTab","renderUserReactions","reactions","length","reactionGroups","reaction_id","toString","allTab","otherTabs","Object","keys","reactionId","tabTitle","renderTabs","style","padding","PlusIcon","img","SmileIcon","width","SmileSvg","PlusSvg","TOOLTIP_BACKGROUND","Wrapper","Tooltip","text","showTooltip","setShowTooltip","tooltipRef","useRef","handleMouseOverOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","ref","onMouseOver","e","button","Emoji","EmojiButton","data","onEmojiClick","name","stopPropagation","preventDefault","AddReaction","EmojisList","TriggerButton","emojis","onEmojiClicked","triggerRef","showEmojis","setShowEmojis","clickEnabled","setClickEnabled","handleClickOutside","handleEmojiClick","a","SmilePlus","highlight","EmojiCount","count","onReactionClick","handleOnClick","rocketLaneAPI","endpoint","fallbackEndpoint","getUsers","withFallBack","apiRoot","axios","get","getReactions","getUserContentReactions","params","saveUserContentReaction","post","deleteUserContentReaction","id","delete","func","call","this","response","console","log","fallbackResponse","Error","fetchUsers","users","fetchReactions","fetchUserContentReactions","contentId","content_id","user_id","userContentReactionId","useReaction","loading","setLoading","error","setError","setReactions","setUsers","setUserReactions","Promise","all","userReactionsDetails","forEach","userReaction","details","loadData","getUserReactionForReactionIdIndex","userId","findIndex","toggleUserReaction","userContentReactionItem","splice","newUserReaction","getUserReactionForReactionId","App","searchParams","URLSearchParams","window","location","search","parseInt","getContentId","handleOnEmojiClicked","message","groupedReactions","currentUserReaction","Trigger","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.146fdfa0.chunk.js","sourcesContent":["import React, { ReactElement } from 'react'\nimport styled from 'styled-components'\n\ninterface TabPaneProps {\n  tab: ReactElement | string,\n  tabKey: string\n}\n\nexport const TabPane:React.FC<TabPaneProps> = ({children}) => {\n  return <div>\n    {children}\n  </div> \n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  max-height: 100%;\n\n  * {\n    font-size: 14px;\n  }\n`\n\nconst TabNamesList = styled.ul`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  border-bottom: 1px solid #e0e0e0;\n  padding: 0;\n  margin: 0;\n  height: 40px;\n`\n\ninterface TabNamesListItemProps {\n  active: boolean\n}\n\nconst TabNamesListItem = styled.li<TabNamesListItemProps>`\n  list-style: none;\n  display: flex;\n  align-items: center;\n  padding: 0 16px;\n  height: 100%;\n  border-bottom: 2px solid ${props => props.active ? '#0f62fe': '#e0e0e0'};\n  cursor: pointer;\n  height: 40px;\n`\n\nconst TabContent = styled.div`\n  max-height: 100%;\n  overflow: auto;\n  margin: 4px 0;\n`\ninterface Props {\n  children: ReactElement<TabPaneProps>[],\n  activeKey: string,\n  onChange: (tabKey: string) => void\n}\n\nexport const Tabs:React.FC<Props> = ({children, activeKey, onChange}) => {\n\n  const handleOnTabClick = (tabKey: string) => {\n    onChange(tabKey)\n  }\n\n  const activeTab = children.find((item, index) => item.props.tabKey === activeKey)\n  return (\n    <Container>\n      <TabNamesList>\n        {\n          children.map((item, index) => {\n            return <TabNamesListItem \n              key={index} \n              active={item.props.tabKey === activeKey}\n              onClick={handleOnTabClick.bind(this, item.props.tabKey)}\n            >\n                {item.props.tab}\n            </TabNamesListItem>\n          })\n        }\n      </TabNamesList>\n      <TabContent>\n        {\n          activeTab\n        }\n      </TabContent>\n    </Container>\n  )\n}\n\nexport default Tabs","import React from 'react'\nimport styled from 'styled-components'\n\nimport { User, Reaction } from 'types'\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 4px 8px;\n  font-weight: 500;\n  > div {\n    padding: 0 8px;\n  }\n`\n\nconst ImageContainer = styled.div`\n  img {\n    width: 25px;\n    height: 25px;\n    border-radius: 50%;\n  }\n`\ninterface Props {\n  user: User,\n  reaction: Reaction\n}\n\nexport const UserReaction:React.FC<Props> = ({user, reaction}) => {\n  return <Container>\n    <ImageContainer><img src={user.avatar} alt='Avatar' /></ImageContainer>\n    <div>{reaction.emoji}</div>\n    <div>{user.first_name} {user.last_name}</div>\n  </Container>\n}\n\nexport default UserReaction","export const groupBy = <T, K extends keyof any>(list: T[], getKey: (item: T) => K) =>\n  list.reduce((previous, currentItem) => {\n    const group = getKey(currentItem);\n    if (!previous[group]) previous[group] = [];\n    previous[group].push(currentItem);\n    return previous;\n  }, {} as Record<K, T[]>\n)","import React, { ReactElement, useState } from 'react'\nimport styled from 'styled-components'\n\n// components\nimport Tabs, { TabPane } from 'ui/Tabs'\nimport UserReaction  from 'ui/UserReaction'\n\n//helpers\nimport { groupBy } from 'utils'\n\n//types\nimport { UserContentReactionDetail } from 'types'\n\nconst Container = styled.div`\n  border: 1px solid #e0e0e0;\n  padding: 16px 0;\n  height: 300px;\n  min-width: 270px;\n`\n\nconst Title = styled.div`\n  padding: 0 16px;\n`\n\ninterface Props {\n  title: ReactElement | string,\n  userReactions: UserContentReactionDetail[]\n}\n\nexport const Summary:React.FC<Props> = ({title, userReactions}) => {\n  const [ activeTab, setActiveTab ] = useState('all')\n  \n  const handleOnTabChange = (tab: string) => {\n    setActiveTab(tab)\n  }\n\n  const renderUserReactions = (reactions: UserContentReactionDetail[]) => {\n    return reactions.map(({user, reaction}, index) => {\n      if (user && reaction) {\n        return <UserReaction user={user} reaction={reaction} key={index} />\n      } else {\n        return null\n      }\n    })\n  }\n\n  const renderTabs = () => {\n    const reactionGroups = groupBy(userReactions, item => item.reaction_id.toString())\n    const allTab = (<TabPane tab={<b>All</b>} tabKey='all' key='all'>\n        { renderUserReactions(userReactions)}\n      </TabPane>\n    )\n    const otherTabs = Object.keys(reactionGroups).map((reactionId, index) => {\n      const reactions = reactionGroups[reactionId]\n      const tabTitle = `${reactions[0].reaction?.emoji} • ${reactions.length}`\n      return <TabPane tab={tabTitle} tabKey={reactionId} key={index}>\n       { renderUserReactions(reactions) }\n      </TabPane>\n    })\n    return [ allTab, ...otherTabs ]\n  }\n\n  return (\n    <Container>\n      <Title>{title}</Title>\n      {\n        userReactions.length > 0 ?\n        <Tabs activeKey={activeTab} onChange={handleOnTabChange}>\n          {renderTabs()}\n        </Tabs>\n        : <div style={{padding: '8px 16px'}}>\n          No Summary Data\n        </div>\n      }\n    </Container>\n  )\n}\n\nexport default Summary","export default __webpack_public_path__ + \"static/media/smile.3e3d47c9.svg\";","export default __webpack_public_path__ + \"static/media/plus.d2c8885b.svg\";","import React from 'react'\nimport styled from 'styled-components'\n\nimport SmileSvg from './assets/smile.svg'\nimport PlusSvg from './assets/plus.svg'\n\nconst Container = styled.div`\n  position: relative;\n  max-width: 100px;\n`\n\nconst PlusIcon = styled.img`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 33%;\n  background: white;\n  border-radius: 50%;\n`\n\ninterface Props {\n  /** width in pxs of the Icon max width is 100px, if width is not provided it fits to the width of the container*/\n  width?: number\n}\n\nexport const SmileIcon:React.FC<Props> = ({width}) => {\n  return <Container style={{width: `${width}px`}}>\n    <img src={SmileSvg} alt='smile' />\n    <PlusIcon src={PlusSvg} />\n  </Container>\n}\n\nexport default SmileIcon","import React, { useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\n\nconst TOOLTIP_BACKGROUND = '#161616'\n\nconst Wrapper = styled.div`\n  display: flex;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n`\n\nconst Container = styled.div`\n  background: ${TOOLTIP_BACKGROUND};\n  border-radius: 2px;\n  padding: 12px 16px;\n  font-size: 12px;\n  color: white;\n  display: inline-block;\n  position: absolute;\n  transform: translateY(calc(-100% - 10px));\n\n  :before {\n    content:'';\n    position: absolute;\n    border-top: 4px solid ${TOOLTIP_BACKGROUND};\n    border-right: 4px solid transparent;\n    border-left: 4px solid transparent;\n    bottom: -4px;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n`\n\ninterface Props {\n  /** Tooltip text */\n  text: string\n}\n\nexport const Tooltip:React.FC<Props> = ({text, children}) => {\n  const [ showTooltip, setShowTooltip ] = useState(false)\n  const tooltipRef = useRef<HTMLDivElement>(null)\n\n  const handleMouseOverOutside:EventListener = (event) => {\n    if (tooltipRef.current  && !tooltipRef.current.contains(event.target as Node)) {\n      setShowTooltip(false)\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('mouseover', handleMouseOverOutside)\n    return () => {\n      document.removeEventListener('mouseover', handleMouseOverOutside)\n    }\n  }, [])\n\n  const handleMouseOver:React.MouseEventHandler<HTMLDivElement> = (e) => {\n    setShowTooltip(true)\n  }\n  \n  return (\n    <Wrapper ref={tooltipRef}>\n      {\n        showTooltip &&\n        <Container>\n          {text}\n        </Container>\n      }\n      <div onMouseOver={handleMouseOver}>\n        {children}\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default Tooltip\n\n","import React from 'react'\nimport styled from 'styled-components'\n\n//components\nimport Tooltip from '../../Tooltip'\n\n//types\nimport { Reaction } from 'types'\n\nconst Container = styled.button`\n  padding: 0 8px;\n  border: none;\n  background: none;\n  cursor: pointer;\n`\n\nconst Emoji = styled.div`\n  width: 16px;\n  height: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  &:hover {\n    transform: scale(2);\n    transform-origin: bottom;\n  }\n`\n\ninterface Props {\n  data: Reaction\n  onEmojiClick: (item: Reaction) => void\n}\n\nexport const EmojiButton:React.FC<Props> = ({data, onEmojiClick}) => {\n\n  const handleEmojiClick:React.MouseEventHandler = (e) => {\n    e.stopPropagation()\n    e.preventDefault()\n    onEmojiClick(data)\n  }\n\n  return <Container>\n    <Tooltip text={data.name}>\n      <Emoji onClick={handleEmojiClick}>{data.emoji}</Emoji>\n    </Tooltip>\n  </Container>\n}\n\nexport default EmojiButton\n","import React, { useEffect, useState, useRef } from 'react'\nimport styled from 'styled-components'\n\n//components\nimport SmilePlus from 'ui/icons/SmilePlus'\nimport EmojiButton from 'ui/buttons/Emoji'\n\n//types\nimport { Reaction } from 'types'\n\ninterface Props {\n  /** input array of emojis */\n  emojis: Reaction[]\n  /** On emoji clicked send item that was clicked */\n  onEmojiClicked: (item: Reaction) => Promise<boolean>,\n  reactions?: {\n    emoji: string,\n    count: number\n  }[]\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`\n \nconst AddReaction = styled.button`\n  width: 32px;\n  height: 32px;\n  border: 1px solid #e0e0e0;\n  border-radius: 50%;\n  position: relative;\n  cursor: pointer;\n`\n\nconst EmojisList = styled.div`\n  position: absolute;\n  top: calc(-100% - 8px);\n  border-radius: 24px;\n  height: 32px;\n  font-size: 16px;\n  display: flex;\n  padding: 0 12px;\n  border: 1px solid #e0e0e0;\n  box-shadow: 0 3px 10px #e0e0e0;\n  background: white;\n`\n\nexport const TriggerButton:React.FC<Props> = ({emojis, onEmojiClicked}) => {\n  const triggerRef = useRef<HTMLDivElement>(null)\n  const [ showEmojis, setShowEmojis ] = useState(false)\n  const [ clickEnabled, setClickEnabled ] = useState(true)\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  const handleClickOutside:EventListener = (event) => {\n    if (triggerRef.current  && !triggerRef.current.contains(event.target as Node)) {\n      setShowEmojis(false)\n    }\n  }\n\n  const handleClick = () => {\n    setShowEmojis(!showEmojis)\n  }\n\n  const handleEmojiClick = async (emoji: Reaction) => {\n    if (clickEnabled) {\n      setClickEnabled(false)\n      await onEmojiClicked(emoji)\n      setClickEnabled(true)\n    }\n  }\n\n  return (\n    <Container ref={triggerRef}>\n      {\n        showEmojis &&\n        <EmojisList>\n          {\n            emojis.map((emoji, index) => {\n              return <EmojiButton \n                key={index} \n                data={emoji}\n                onEmojiClick={handleEmojiClick}\n              />\n            })\n          }\n        </EmojisList>\n      }\n      <AddReaction onClick={handleClick}>\n        <SmilePlus />\n      </AddReaction>\n    </Container>    \n  )\n}\n\nexport default TriggerButton\n\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\n//types\nimport { Reaction } from 'types'\n\ninterface ContainerProps {\n  highlight: boolean\n}\n\nconst Container = styled.div<ContainerProps>`\n  height: 32px;\n  border-radius: 24px;\n  border: 1px solid ${props => props.highlight ? '#0f62fe' : '#e0e0e0'};\n  background: ${props => props.highlight ? '#edf5ff' : 'white'};\n  padding: 0 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: ${props => props.highlight && 'pointer'};\n\n  > div {\n    padding: 0 4px;\n  }\n`\n\ninterface Props {\n  /** Set to true if current user selected this emoji */\n  reaction: Reaction,\n  count: number,\n  highlight?: boolean\n  /** Called only if the button is highlighted */\n  onReactionClick?: (reaction: Reaction) => Promise<boolean>\n}\n\nexport const EmojiCount:React.FC<Props> = ({highlight = false, reaction, count, onReactionClick}) => {\n  const [ clickEnabled, setClickEnabled ] = useState(true)\n\n  const handleOnClick:React.MouseEventHandler<HTMLDivElement> = async (e) => {\n    e.stopPropagation()\n    e.preventDefault()\n    if (highlight && onReactionClick) {\n      if (clickEnabled) {\n        setClickEnabled(false)\n        await onReactionClick(reaction)\n        setClickEnabled(true)\n      }\n      return\n    }\n  }\n  return (\n    <Container highlight={highlight} onClick={handleOnClick}>\n      <div>{reaction.emoji}</div> \n      <div>{count}</div>\n    </Container>\n  )\n}\n\nexport default EmojiCount","import { useState, useEffect } from 'react'\n\n//apis\nimport RocketlaneAPI from 'api'\n\n//types\nimport { User, UserContentReactionDetail, Reaction } from 'types'\n\nconst rocketLaneAPI = new RocketlaneAPI()\nconst fetchUsers = async () => {\n  const response = await rocketLaneAPI.getUsers()\n  const users = response.data\n  return users\n}\n\nconst fetchReactions = async () => {\n  const response = await rocketLaneAPI.getReactions()\n  const reactions = response.data\n  return reactions\n}\n\nconst fetchUserContentReactions = async (contentId: number) => {\n  const response = await rocketLaneAPI.getUserContentReactions({\n    content_id: contentId\n  })\n  const userReactions = response.data\n  return userReactions\n}\n\nconst saveUserContentReaction = async (user_id: number, reaction_id: number, content_id: number) => {\n  const response = await rocketLaneAPI.saveUserContentReaction({user_id, reaction_id, content_id})\n  return response.data\n}\n\nconst deleteUserContentReaction = async (userContentReactionId: number) => {\n  const response = await rocketLaneAPI.deleteUserContentReaction(userContentReactionId)\n  console.log(response.data)\n  return response.data\n}\n\nconst useReaction = (contentId: number) => {\n  const [ loading, setLoading ] = useState(true)\n  const [ error, setError ] = useState<Error>()\n  const [ reactions, setReactions ] = useState<Reaction[]>([])\n  const [ users, setUsers ] = useState<User[]>([])\n  const [ userReactions, setUserReactions] = useState<UserContentReactionDetail[]>([])\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const [users, reactions] = await Promise.all([fetchUsers(), fetchReactions()])\n        setUsers(users)\n        setReactions(reactions)\n  \n        const userReactions = await fetchUserContentReactions(contentId)\n        const userReactionsDetails:UserContentReactionDetail[] = []\n        userReactions.forEach((userReaction, index) => {\n          const user = users.find((user) => user.id === userReaction.user_id)\n          const reaction = reactions.find((reaction) => reaction.id === userReaction.reaction_id)\n          if (user && reaction) {\n            const details: UserContentReactionDetail = {\n              ...userReaction,\n              user,\n              reaction\n            }\n            userReactionsDetails.push(details)\n          } \n        })\n        setUserReactions(userReactionsDetails)\n      } catch (error) {\n        setError(error)\n      } finally {\n        setLoading(false)\n      }\n    }\n    loadData()\n  },[contentId])\n\n  const getUserReactionForReactionId = (userId: number, reactionId: number) => {\n    return userReactions.find((item, index) => item.reaction_id === reactionId && item.user_id === userId)\n  }\n\n  const getUserReactionForReactionIdIndex = (userId: number, reactionId: number) => {\n    return userReactions.findIndex((item, index) => item.reaction_id === reactionId && item.user_id === userId)\n  }\n\n  const toggleUserReaction = async (userId: number, reaction: Reaction) => {\n    const index = getUserReactionForReactionIdIndex(userId, reaction.id)\n    if (index !== -1) {\n      const userContentReactionItem = userReactions[index]\n      userReactions.splice(index, 1)\n      setUserReactions([...userReactions])\n      try {\n        await deleteUserContentReaction(userContentReactionItem.id)\n        return true\n      } catch (error) {\n        //TODO: revert soft delete\n        return false\n      }\n    } else {\n      try {\n        const newUserReaction = await saveUserContentReaction(userId, reaction.id, contentId)\n        const user = users.find((user) => user.id === userId)\n        if (user && reaction) {\n          userReactions.push({\n            ...newUserReaction,\n            user,\n            reaction\n          })\n          setUserReactions([...userReactions])\n        }\n        return true\n      } catch (error) {\n        \n        return false\n      }\n    }\n  }\n  \n  return { loading, error, reactions, users, userReactions, toggleUserReaction, getUserReactionForReactionId}\n}\n\nexport default useReaction","import axios, { AxiosResponse } from 'axios'\n\n//TODO: move types to a single file\n//types\nimport { User, UserContentReaction, Reaction } from 'types'\n\ninterface AxiosFunc<T> {\n  (apiRoot: string): Promise<AxiosResponse<T>>\n}\n\ninterface UserContentParams {\n  user_id?: number, \n  reaction_id?: number, \n  content_id?: number\n}\n\ninterface UserReactionSaveParams {\n  user_id: number, \n  reaction_id: number, \n  content_id: number\n}\n\nclass RocketlaneAPI {\n  private endpoint = 'https://artful-iudex.herokuapp.com'\n  private fallbackEndpoint = 'https://my-json-server.typicode.com/artfuldev/json-db-data'\n\n  private async withFallBack<T>(func: AxiosFunc<T>) {\n    try {\n      const response = await func.call(this, this.endpoint)\n      return response\n    } catch (error) {\n      console.log('failed with primary endpoint, trying with fallback')\n      try {\n        const fallbackResponse = await func.call(this, this.fallbackEndpoint)\n        return fallbackResponse\n      } catch (error2) {\n        console.log('failed with secondary endpoint')\n        throw new Error('failed to fetch data')\n      }\n    }\n  }\n\n  getUsers = () => this.withFallBack<User[]>((apiRoot: string) => axios.get(`${apiRoot}/users`))\n  getReactions = () => this.withFallBack<Reaction[]>((apiRoot: string) => axios.get(`${apiRoot}/reactions`))\n  getUserContentReactions = (params: UserContentParams) => this.withFallBack<UserContentReaction[]>((apiRoot: string) => axios.get(`${apiRoot}/user_content_reactions`, {\n    params\n  }))\n  saveUserContentReaction = (params: UserReactionSaveParams) => this.withFallBack((apiRoot: string) => axios.post<UserContentReaction>(`${apiRoot}/user_content_reactions`, params))\n  deleteUserContentReaction = (id: number) => this.withFallBack((apiRoot: string) => axios.delete(`${apiRoot}/user_content_reactions/${id}`))\n}\n\nexport default RocketlaneAPI","import styled from 'styled-components'\n\n//components\nimport Summary from 'ui/Summary'\nimport TriggerButton from 'ui/buttons/Trigger'\nimport EmojiCount from 'ui/buttons/EmojiCount'\n\n//hooks\nimport useReaction from 'hooks/useReaction'\n\n//helpers\nimport { groupBy } from 'utils'\n\n//types\nimport { Reaction } from 'types'\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 30px;\n  > div {\n    margin: 0 8px;\n  }\n`\n\nfunction getContentId() {\n  let searchParams = new URLSearchParams(window.location.search)\n  return parseInt(searchParams.get('content_id') || '1')\n}\n\nconst CURRENT_USERID = 4\n\nconst App = () => {\n  const { loading, error, reactions, userReactions, toggleUserReaction, getUserReactionForReactionId } = useReaction(getContentId())\n\n  const handleOnEmojiClicked = (reaction: Reaction) => {\n    return toggleUserReaction(CURRENT_USERID, reaction)\n  }\n\n  \n  if (loading) {\n    return <Container>Loading</Container>\n  }\n  if (error) {\n    return <Container>{error.message}</Container>\n  }\n\n  const groupedReactions = groupBy(userReactions, item => item.reaction_id.toString())\n  return (\n    <Container>\n      <Summary \n        title={<b>Reactions</b>}\n        userReactions={userReactions}\n      />\n      {\n        reactions.map((reaction, index) => {\n          if (!groupedReactions[reaction.id]) {\n            return null\n          }\n          const count = groupedReactions[reaction.id].length\n          const currentUserReaction = getUserReactionForReactionId(CURRENT_USERID, reaction.id)\n          return <EmojiCount\n            key={index}\n            reaction={reaction}\n            count={count}\n            highlight={currentUserReaction && currentUserReaction.reaction_id === reaction.id}\n            onReactionClick={handleOnEmojiClicked}\n          />\n        })\n      }\n      <TriggerButton \n        emojis={reactions}\n        onEmojiClicked={handleOnEmojiClicked}\n      />\n    </Container>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}